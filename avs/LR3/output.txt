-----------------------------------------------------------------------
Input string: (((a)))
Postfix notation: a
|a|
(0) -> 0
(1) -> 1

-----------------------------------------------------------------------
Input string: a&b
Postfix notation: ab&
|a, b|
(0, 0) -> 0
(0, 1) -> 0
(1, 0) -> 0
(1, 1) -> 1

-----------------------------------------------------------------------
Input string: (a&(bvc))
Postfix notation: abcv&
|a, b, c|
(0, 0, 0) -> 0
(0, 0, 1) -> 0
(0, 1, 0) -> 0
(0, 1, 1) -> 0
(1, 0, 0) -> 0
(1, 0, 1) -> 1
(1, 1, 0) -> 1
(1, 1, 1) -> 1

-----------------------------------------------------------------------
Input string: (a=b=c=d)
Postfix notation: ab=c=d=
|a, b, c, d|
(0, 0, 0, 0) -> 1
(0, 0, 0, 1) -> 0
(0, 0, 1, 0) -> 0
(0, 0, 1, 1) -> 1
(0, 1, 0, 0) -> 0
(0, 1, 0, 1) -> 1
(0, 1, 1, 0) -> 1
(0, 1, 1, 1) -> 0
(1, 0, 0, 0) -> 0
(1, 0, 0, 1) -> 1
(1, 0, 1, 0) -> 1
(1, 0, 1, 1) -> 0
(1, 1, 0, 0) -> 1
(1, 1, 0, 1) -> 0
(1, 1, 1, 0) -> 0
(1, 1, 1, 1) -> 1

-----------------------------------------------------------------------
Input string: (a&bvc
Incorrect brackets' sequence input string!

-----------------------------------------------------------------------
Input string: (a&$)
Incorrect symbols input string!

-----------------------------------------------------------------------
Input string: (())
There are not variables input string!

-----------------------------------------------------------------------
Input string: (((!a=c)v(a^b))&(a^!b))-c
Postfix notation: a!c=ab^vab!^&c-
|a, b, c|
(0, 0, 0) -> 1
(0, 0, 1) -> 1
(0, 1, 0) -> 1
(0, 1, 1) -> 1
(1, 0, 0) -> 1
(1, 0, 1) -> 1
(1, 1, 0) -> 0
(1, 1, 1) -> 1

-----------------------------------------------------------------------
Input string: (a-b)-((a-c)-(a-b&c))
Postfix notation: ab-ac-abc&---
|a, b, c|
(0, 0, 0) -> 1
(0, 0, 1) -> 1
(0, 1, 0) -> 1
(0, 1, 1) -> 1
(1, 0, 0) -> 1
(1, 0, 1) -> 1
(1, 1, 0) -> 1
(1, 1, 1) -> 1

-----------------------------------------------------------------------
Input string: !(((a^!b)v(!a-c))&(b/c))
Postfix notation: ab!^a!c-vbc/&!
|a, b, c|
(0, 0, 0) -> 0
(0, 0, 1) -> 0
(0, 1, 0) -> 1
(0, 1, 1) -> 1
(1, 0, 0) -> 0
(1, 0, 1) -> 0
(1, 1, 0) -> 0
(1, 1, 1) -> 1

-----------------------------------------------------------------------
Input string: ((a/!b)v!(a^b)-!(!c&a))=c
Postfix notation: ab!/ab^!vc!a&!-c=
|a, b, c|
(0, 0, 0) -> 0
(0, 0, 1) -> 1
(0, 1, 0) -> 0
(0, 1, 1) -> 1
(1, 0, 0) -> 0
(1, 0, 1) -> 1
(1, 1, 0) -> 1
(1, 1, 1) -> 1

-----------------------------------------------------------------------
Input string: (((!a-!b)^(b^c))&(!b=c))/a
Postfix notation: a!b!-bc^^b!c=&a/
|a, b, c|
(0, 0, 0) -> 1
(0, 0, 1) -> 1
(0, 1, 0) -> 1
(0, 1, 1) -> 1
(1, 0, 0) -> 1
(1, 0, 1) -> 1
(1, 1, 0) -> 1
(1, 1, 1) -> 1

-----------------------------------------------------------------------
Input string: (((a^!c)&(a-!b))v(!a-b))/!c
Postfix notation: ac!^ab!-&a!b-vc!/
|a, b, c|
(0, 0, 0) -> 0
(0, 0, 1) -> 1
(0, 1, 0) -> 0
(0, 1, 1) -> 1
(1, 0, 0) -> 0
(1, 0, 1) -> 1
(1, 1, 0) -> 0
(1, 1, 1) -> 1

-----------------------------------------------------------------------
Input string: (((a-!b)&(a/c))-!a)^!(avb%)
Incorrect symbols input string!

-----------------------------------------------------------------------
Input string: ((avb&!c)^(b-c-!a))-(a/!c))
Incorrect brackets' sequence input string!

-----------------------------------------------------------------------
Input string: !a&!b&cv!b&!c&dvb&!d
Postfix notation: a!b!&c&b!c!&d&vbd!&v
|a, b, c, d|
(0, 0, 0, 0) -> 0
(0, 0, 0, 1) -> 1
(0, 0, 1, 0) -> 1
(0, 0, 1, 1) -> 1
(0, 1, 0, 0) -> 1
(0, 1, 0, 1) -> 0
(0, 1, 1, 0) -> 1
(0, 1, 1, 1) -> 0
(1, 0, 0, 0) -> 0
(1, 0, 0, 1) -> 1
(1, 0, 1, 0) -> 0
(1, 0, 1, 1) -> 0
(1, 1, 0, 0) -> 1
(1, 1, 0, 1) -> 0
(1, 1, 1, 0) -> 1
(1, 1, 1, 1) -> 0

-----------------------------------------------------------------------
Input string: b&!dv!a&!b&dv!b&!c&dv!a&!b&cv!a&c&!d
Postfix notation: bd!&a!b!&d&vb!c!&d&va!b!&c&va!c&d!&v
|a, b, c, d|
(0, 0, 0, 0) -> 0
(0, 0, 0, 1) -> 1
(0, 0, 1, 0) -> 1
(0, 0, 1, 1) -> 1
(0, 1, 0, 0) -> 1
(0, 1, 0, 1) -> 0
(0, 1, 1, 0) -> 1
(0, 1, 1, 1) -> 0
(1, 0, 0, 0) -> 0
(1, 0, 0, 1) -> 1
(1, 0, 1, 0) -> 0
(1, 0, 1, 1) -> 0
(1, 1, 0, 0) -> 1
(1, 1, 0, 1) -> 0
(1, 1, 1, 0) -> 1
(1, 1, 1, 1) -> 0

